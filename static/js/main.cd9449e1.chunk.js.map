{"version":3,"sources":["assets/spin.mp3","components/main.js","firebase.js","components/ticket.js","components/PlayCard.js","App.js","reportWebVitals.js","index.js"],"names":["wins","App","useState","list","setList","isWating","setIsWating","spinner","setSpiner","Audio","sound","audio","history","useHistory","useEffect","length","localStorage","setItem","JSON","stringify","stoaredList","parse","getItem","Board","tempList","row","i","push","className","includes","style","backgroundColor","fontSize","color","fontWeight","margin","width","borderLeft","borderRight","height","border","Button","variant","onClick","removeItem","size","background","intervalId","setInterval","number","Math","floor","random","flag","play","setTimeout","clearInterval","remove","disabled","Spinner","animation","class","map","label","FormCheck","textAlign","borderColor","React","memo","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","fireStore","getFirestore","constSets","colors","Ticket","player","setPlayers","sets","setSets","password","setPassword","openField","setOpenField","updateTickets","a","ticketDoc","doc","data","players","parseInt","updateDoc","alert","tempCard","card","index","myID","id","marginLeft","padding","_entries","col","display","justifyContent","alignItems","v","type","value","onChange","e","target","ticket","placeholder","set","tickets","tamblo","generateTickets","rows","init","all","top","bottom","middle","corner","PlayCard","useParams","selectedCard","setSelectedCard","corners","setCorners","ticketCollectionRef","collection","Array","fill","myCard","setMyCard","myCount","setMyCount","getDocs","docs","getTickets","ar","arr","temp1","temp2","temp","setconerValues","cardindex","rowindex","flexWrap","colindex","lexBasis","flexGrow","cursor","textDecoration","cardIndex","count","overflow","path","component","Main","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAAe,MAA0B,iCCInCA,EAAO,CACX,UACA,WACA,cACA,cACA,eACA,eACA,iBAEF,SAASC,IAAO,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEmBF,oBAAS,GAF5B,mBAENG,EAFM,KAEIC,EAFJ,OAGgBJ,mBAAS,GAHzB,mBAGNK,EAHM,KAGGC,EAHH,OAIWN,mBAAS,IAAIO,MAAMC,IAJ9B,mBAINC,EAJM,KAKPC,GALO,KAKGC,eAEhBC,qBAAU,WACJX,EAAKY,QAAQC,aAAaC,QAAQ,UAAWC,KAAKC,UAAUhB,MAC/D,CAACA,IAEJW,qBAAU,WACR,IAAIM,EAAcF,KAAKG,MAAML,aAAaM,QAAQ,YAC9CF,GAAahB,EAAQgB,KACxB,IAEH,IA6BMG,EAAQ,WAGZ,IAFA,IAAIC,EAAW,GACXC,EAAM,GACDC,EAAI,EAAGA,GAAK,GAAIA,IAEvBD,EAAIE,KAAK,qBACPC,UAAS,eAAUzB,EAAK0B,SAASH,GAAK,gBAAkB,GAA/C,2BACTI,MAAO,CAAEC,gBAAiB5B,EAAK0B,SAASH,GAAK,UAAY,IAFlD,SAGP,sBAAMI,MAAO,CAAEE,SAAU,OAAQC,MAAQ9B,EAAK0B,SAASH,GAAiB,GAAZ,UAAgBQ,WAAa/B,EAAK0B,SAASH,GAAa,OAAR,OAA5G,SAA8H,4BAAIA,SAGhIA,EAAI,KAAO,IACbF,EAASG,KAAK,qBAAKC,UAAU,MAAME,MAAO,CAAEK,OAAQ,MAAOC,MAAO,OAAQC,WAAY,iBAAkBC,YAAa,aAAvG,SAAuHb,KACrIA,EAAM,IAGV,OAAOD,GAGT,OACE,sBAAKI,UAAU,MAAME,MAAO,CAAES,OAAQ,QAASC,OAAQ,aAAvD,UACE,sBAAKZ,UAAU,mDAAmDE,MAAO,CAAEC,gBAAiB,WAA5F,UACE,sBAAKH,UAAU,gCAAf,UACE,cAACa,EAAA,EAAD,CAAQC,QAAQ,OAAOC,QApDT,WACpBvC,EAAQ,IACRY,aAAa4B,WAAW,YAkD6BC,KAAK,KAApD,mBAGA,cAACJ,EAAA,EAAD,CAAQb,UAAU,OAAOc,QAAQ,YAAYC,QAAS,kBAAM/B,EAAQe,KAAK,qBAAqBkB,KAAK,KAAnG,iCAIF,qBAAKf,MAAO,CAAEE,SAAU,QAAUJ,UAAU,OAA5C,sBACA,qBAAKE,MAAO,CAAEM,MAAO,QAASG,OAAQ,SAAWX,UAAU,+FAA3D,SACmB,IAAhBzB,EAAKY,QACJ,sBAAMe,MAAO,CAAEE,SAAU,OAAQC,MAAO,QAAxC,SACG9B,EAAKA,EAAKY,OAAS,OAI1B,qBAAKe,MAAO,CAAEM,MAAO,QAASG,OAAQ,QAAQO,WAAW,WAAalB,UAAU,qFAAhF,SACGvB,EACC,sBAAMyB,MAAO,CAAEE,SAAU,QAASC,MAAO,QAAzC,SACG1B,IAEHJ,EAAKY,OACH,sBAAMe,MAAO,CAAEE,SAAyB,GAAf7B,EAAKY,OAAc,QAAU,OAAQmB,WAAY,QAA1E,SACG/B,EAAKA,EAAKY,OAAS,KAEtB,0DAGN,cAAC0B,EAAA,EAAD,CAAQb,UAAU,OAAOe,QA1ET,WAChBxC,EAAKY,OAAS,IAAK,WAMrB,IALA,IAAIgC,EAAaC,aAAY,WAC3B,IAAIC,EAASC,KAAKC,MAAM,GAAAD,KAAKE,SAAsB,GACnD5C,EAAUyC,KACT,IACCI,GAAO,EALS,aAOlB,IAAIJ,EAASC,KAAKC,MAAM,GAAAD,KAAKE,SAAsB,GAC9CjD,EAAK0B,SAASoB,KACjB3C,GAAY,GACZK,EAAM2C,OACND,GAAO,EACPE,YAAW,WACTC,cAAcT,GACd3C,EAAQ,GAAD,mBAAKD,GAAL,CAAW8C,KAClB3C,GAAY,GACZK,EAAM8C,WACL,QAXAJ,GAAO,IANO,IAyE8BK,SAAUrD,EAA3D,SACGA,EACC,cAACsD,EAAA,EAAD,CAASC,UAAU,SAASlB,QAAQ,SACpC,qDAGJ,qBAAKmB,MAAM,6BAAX,SACG7D,EAAK8D,KAAI,SAAAC,GAAK,OAAI,cAACC,EAAA,EAAD,CAAWlC,MAAO,CAAEM,MAAO,QAAS6B,UAAW,QAAUrC,UAAU,MAAMmC,MAAOA,YAGvG,qBAAKnC,UAAU,WAAWE,MAAO,CAAES,OAAQ,OAAQR,gBAAiB,UAAWM,WAAY,aAA3F,SACE,gCACE,6BAAI,4DACJ,qBAAKwB,MAAM,gCAAgC/B,MAAO,CAAEoC,YAAa,UAAU1B,OAAO,qBAAlF,SACE,cAACjB,EAAD,cAQG4C,UAAMC,KAAKnE,G,gECrHpBoE,EAAMC,YAXW,CACnBC,OAAQ,0CACRC,WAAY,+BACZC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBAKNC,EAAYC,YAAaV,GCPhCW,EAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5BC,EAAS,CAAC,MAAO,QAAS,OAAQ,SAAU,SAAU,UAE5D,SAASC,IAAU,IAAD,EACUhF,mBAAS,IADnB,mBACPC,EADO,KACDC,EADC,OAEeF,mBAAS,GAFxB,mBAEPiF,EAFO,KAECC,EAFD,OAGUlF,mBAAS,GAHnB,mBAGPmF,EAHO,KAGDC,EAHC,OAIkBpF,mBAAS,IAJ3B,mBAIPqF,EAJO,KAIGC,EAJH,OAKoBtF,oBAAS,GAL7B,mBAKPuF,EALO,KAKIC,EALJ,KAQR9E,EAAUC,cAEV8E,EAAa,uCAAG,8BAAAC,EAAA,yDACD,aAAbL,EADc,uBAERM,EAAYC,YAAIhB,EAAW,UAAW,WACxCiB,EAAO,CACP5F,KAAMe,KAAKC,UAAUhB,GACrB6F,QAASC,SAASd,GAClBE,KAAMA,GANI,SAQRa,YAAUL,EAAWE,GARb,OASdI,MAAM,iCACNT,GAAa,GAVC,uBAYdS,MAAM,qBAZQ,4CAAH,qDAwCbC,EAnBW,SAACC,EAAMC,GAChB,IAAIC,EAAOrD,KAAKC,MAAMmD,EAAQjB,GAAQ,EAClCpD,EAAQgD,EAAOqB,EAAQjB,GAC3B,OAAO,mCAAE,qBAAKzD,UAAU,OAAf,SACL,sBAAK4E,GAAE,UAAKD,EAAL,YAAatE,GAASH,MAAO,CAAE2E,WAAY,OAAQC,QAAS,OAAQ5D,WAAY,QAAUlB,UAAU,wBAA3G,UACI,+BAAOK,IACNoE,EAAKM,SAAS7C,KAAI,SAAArC,GAAG,OAClB,qBAAKoC,MAAM,OAAX,SACKpC,EAAIqC,KAAI,SAAA8C,GAAG,OAAI,qBAAK/C,MAAM,yBAAyB/B,MAAO,CAAEM,MAAO,OAAQG,OAAQ,OAAQsE,QAAS,OAAQC,eAAgB,SAAUC,WAAY,SAAU/E,SAAU,OAAQc,WAAY8D,EAAM,OAAS3E,GAA1L,SAAoM2E,GAAO,cAGnO,wDAAoBL,EAApB,YAA4BtE,cAU5C,OACI,mCACM9B,EAAKY,OAkBH,sBAAKe,MAAO,CAAEgB,WAAY,WAAalB,UAAU,OAAjD,UACI,cAACa,EAAA,EAAD,CAAQE,QAAS,kBAAM/B,EAAQe,KAAK,aAAakB,KAAK,KAAKH,QAAQ,UAAUd,UAAU,OAAvF,kBACA,cAACa,EAAA,EAAD,CAAQE,QAAS,kBAAM+C,GAAa,SAAAsB,GAAC,OAAKA,MAAInE,KAAK,KAAKH,QAAQ,UAAUd,UAAU,YAApF,2BACC6D,GAAa,gCACV,uBAAOwB,KAAK,OAAOC,MAAO3B,EAAU4B,SAAU,SAACC,GAAD,OAAO5B,EAAY4B,EAAEC,OAAOH,UAC1E,cAACzE,EAAA,EAAD,CAAQE,QAASgD,EAAe9C,KAAK,KAAKH,QAAQ,UAAUd,UAAU,YAAtE,uBAEJ,qBAAKA,UAAU,MAAf,SACKzB,EAAK2D,KAAI,SAACwD,EAAQhB,GAAT,OAAmBF,EAASkB,EAAQhB,WAzBtD,qBAAK1E,UAAU,MAAME,MAAO,CAAES,OAAQ,QAASO,WAAY,UAAWV,MAAO,OAAQyE,QAAS,OAAQC,eAAgB,SAAUC,WAAY,UAA5I,SACI,gCACI,cAACtE,EAAA,EAAD,CAAQE,QAAS,kBAAM/B,EAAQe,KAAK,aAAakB,KAAK,KAAKH,QAAQ,UAAUd,UAAU,OAAvF,kBACA,8BACI,uBAAOE,MAAO,CAAE4E,QAAS,QAAUa,YAAY,0BAA0BJ,SAAU,SAACC,GAAD,OAAOhC,EAAWgC,EAAEC,OAAOH,QAAQD,KAAK,aAE/H,sBAAKrF,UAAU,OAAf,UACI,uBAAOA,UAAU,OAAjB,sCACA,wBAAQuF,SAAU,SAACC,GAAD,OAAO9B,EAAQW,SAASmB,EAAEC,OAAOH,SAAStF,UAAU,YAAtE,SACKoD,EAAUlB,KAAI,SAAA0D,GAAG,OAAI,wBAAQN,MAAOM,EAAf,SAAsBA,YAGpD,qBAAK5F,UAAU,OAAf,SACI,cAACa,EAAA,EAAD,CAAQE,QA3CX,WACjB,IAAI8E,EAAUC,IAAOC,gBAAgB1B,SAASd,EAASE,IACvDjF,EAAQqH,IAyC2C/E,QAAQ,UAAvC,uCAoBbyB,UAAMC,KAAKc,G,QC9FpBD,EAAS,CAAC,MAAO,QAAS,OAAQ,SAAU,SAAU,UACxD2C,EAAO,CAAC,MAAO,SAAU,UACvBC,EAAO,CAAEC,IAAK,EAAGC,IAAK,EAAGC,OAAQ,EAAGC,OAAQ,EAAGC,OAAQ,GAE7D,SAASC,IAAY,IAAD,EACQjI,mBAAS,IADjB,mBACTC,EADS,KACHC,EADG,KAERoG,EAAO4B,cAAP5B,GAFQ,EAGQtG,mBAAS,GAHjB,mBAGTmF,EAHS,KAGHC,EAHG,OAIcpF,mBAAS,GAJvB,mBAIT8F,EAJS,KAIAZ,EAJA,OAKwBlF,mBAAS,IALjC,mBAKTmI,EALS,KAKKC,EALL,OAMcpI,mBAAS,IANvB,mBAMTqI,EANS,KAMAC,EANA,KAOVC,EAAsBC,YAAW5D,EAAW,WAPlC,EASY5E,mBAAS,YAAIyI,MAAM,IAAI7E,KAAI,SAAAsD,GAAC,OAAIuB,MAAM,GAAGC,KAAK,UAT1D,mBASTC,EATS,KASDC,EATC,OAUc5I,mBAAS,IAVvB,mBAUT6I,EAVS,KAUAC,EAVA,KAYhBlI,qBAAU,YACU,uCAAG,4BAAA8E,EAAA,sEACEqD,YAAQR,GADV,OAEf1C,GADIA,EADW,QAEHmD,KAAK,GAAGnD,OACpB3F,EAAQc,KAAKG,MAAM0E,EAAK5F,OACxBmF,EAAQS,EAAKV,MACbD,EAAWW,EAAKC,SALD,2CAAH,qDAOhBmD,KACD,IAmBHrI,qBAAU,WACN,GAAIX,EAAKY,OAAS,GAAKsE,GAAQY,SAASO,IAAOR,GAAWC,SAASO,GAAM,EAAG,CACxEwC,EAAW,YAAIL,MAAMtD,IAAOvB,KAAI,SAAAsD,GAAC,sBAAUS,OAC3CiB,EAAU,YAAIH,MAAMtD,IAAOvB,KAAI,SAAAsD,GAAC,OAAI,YAAIuB,MAAM,IAAI7E,KAAI,SAAAsD,GAAC,OAAIuB,MAAM,GAAGC,KAAK,aAGzE,IAFA,IAAIQ,EAAK,GAEA1H,GADIuE,SAASO,GAAM,GAAKnB,EACb3D,EAAIuE,SAASO,GAAMnB,EAAM3D,IACzC0H,EAAGzH,KAAKxB,EAAKuB,KAxBF,SAAC0H,GACpB,IAAIC,EAAM,GACVD,EAAGtF,KAAI,SAAAuC,GACH,IAAIiD,EAAQ,GACZjD,EAAKM,SAAS,GAAG7C,KAAI,SAAA8C,GACN,GAAPA,GAAU0C,EAAM3H,KAAKiF,MAE7B,IAAI2C,EAAQ,GACZlD,EAAKM,SAAS,GAAG7C,KAAI,SAAA8C,GACN,GAAPA,GAAU2C,EAAM5H,KAAKiF,MAE7B,IAAI4C,EAAO,CAACF,EAAM,GAAIA,EAAM,GAAIC,EAAM,GAAIA,EAAM,IAChDF,EAAI1H,KAAK6H,MAEbhB,EAAWa,GAYPI,CAAeL,GACfd,EAAgBc,MAGrB,CAACjJ,EAAMkF,EAAMW,IA8BhB,OACI,qCACKC,SAASO,IAAO6B,EAAavE,KAAI,SAACuC,EAAMqD,GAAP,OAAqB,sBAAK5H,MAAO,CAAEK,OAAQ,OAAQuE,QAAS,OAAQ5D,WAAY,OAAQN,OAAQ,YAAaJ,MAAO,OAAQyE,QAAS,QAAhH,UACnD,qBAAK/E,MAAO,CAAEM,MAAO,OAArB,SACKiE,EAAKM,SAAS7C,KAAI,SAACrC,EAAKkI,GAAN,OACf,qBAAK7H,MAAO,CAAE+E,QAAS,OAAQ+C,SAAU,OAAQzH,OAAQ,YAAzD,SACKV,EAAIqC,KAAI,SAAC8C,EAAKiD,GAAN,OAAmB,wBACxB/H,MAAO,CACHgI,SAAU,EACVC,SAAU,EAEV3H,MAAO,OACPI,OAAQ,YACRD,OAAQ,OACRsE,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZ/E,SAAU,OACVc,WAAY8D,EAAOiC,EAAOa,GAAWC,GAAUE,GAAY,UAAY,OAAU5E,EAAOyE,GACxFM,OAAQpD,EAAM,UAAY,QAC1BqD,eAAgBpB,EAAOa,GAAWC,GAAUE,GAAY,eAAiB,QAE7ElH,QAAS,SAACyE,GAAD,OAlDrB,SAAC8C,EAAWP,EAAUE,EAAUjD,GAC5C,GAAW,GAAPA,EAAU,CACV,IAAIyC,EAAG,YAAOR,GACVsB,EAAK,eAAQpB,GAC0B,OAAvCM,EAAIa,GAAWP,GAAUE,IACzBR,EAAIa,GAAWP,GAAUE,GAAYjD,EACrCuD,EAAMD,GAAWpC,IAAMiB,EAAQmB,GAAWpC,IAAM,EAChDqC,EAAMD,GAAWtC,EAAK+B,IAAaZ,EAAQmB,GAAWtC,EAAK+B,IAAa,EAGpEpB,EAAQ2B,GAAWrI,SAAS+E,KAC5BuD,EAAMD,GAAWhC,OAASa,EAAQmB,GAAWhC,OAAS,KAI1DmB,EAAIa,GAAWP,GAAUE,GAAY,KACrCM,EAAMD,GAAWpC,IAAMiB,EAAQmB,GAAWpC,IAAM,EAChDqC,EAAMD,GAAWtC,EAAK+B,IAAaZ,EAAQmB,GAAWtC,EAAK+B,IAAa,EAEpEpB,EAAQ2B,GAAWrI,SAAS+E,KAC5BuD,EAAMD,GAAWhC,OAASa,EAAQmB,GAAWhC,OAAS,IAG9DY,EAAUO,GACVL,EAAWmB,IA0ByBxH,CAAQ+G,EAAWC,EAAUE,EAAUjD,IAhB/B,SAiBvBA,GAAO,gBAIxB,sBAAK9E,MAAO,CAAEmC,UAAW,OAAQwC,WAAY,OAAQzE,SAAU,OAAQE,WAAY,OAAnF,UACI,sBAAKJ,MAAO,CAAE4E,QAAS,OAAvB,sBACcqC,EAAQW,GAAW5B,KAAO,EAAI,8CAAgB,iDAE5D,sBAAKhG,MAAO,CAAE4E,QAAS,OAAvB,uBACyC,GAA1BqC,EAAQW,GAAW3B,IAAW,8CAAgB,iDAE7D,sBAAKjG,MAAO,CAAE4E,QAAS,OAAvB,0BAC+C,GAA7BqC,EAAQW,GAAWzB,OAAc,8CAAgB,iDAEnE,sBAAKnG,MAAO,CAAE4E,QAAS,OAAvB,0BAC+C,GAA7BqC,EAAQW,GAAW1B,OAAc,8CAAgB,iDAEnE,sBAAKlG,MAAO,CAAE4E,QAAS,OAAvB,2BACgD,GAA7BqC,EAAQW,GAAWxB,OAAc,8CAAgB,iDAEpE,sBAAKpG,MAAO,CAAE4E,QAAS,OAAvB,2BAC6C,IAA1BqC,EAAQW,GAAW5B,IAAY,8CAAgB,0DAI9D,GAAX9B,IAAiBC,SAASO,GAAMR,GAAWQ,GAAM,IAAQ,mDAKvDrC,UAAMC,KAAK+D,GCzI1B,SAASlI,IACP,OACE,qBAAK2B,UAAU,MAAME,MAAO,CAAEsI,SAAU,UAAxC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,mBAAmBC,UAAWpF,IAC1C,cAAC,IAAD,CAAOmF,KAAK,uBAAuBC,UAAWnC,IAC9C,cAAC,IAAD,CAAOkC,KAAK,IAAIC,UAAWC,SAMpBpG,UAAMC,KAAKnE,GCPXuK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cd9449e1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/spin.16183bed.mp3\";","import React, { useEffect, useState } from \"react\";\nimport { Button, Spinner, FormCheck } from \"react-bootstrap\";\nimport { useHistory } from 'react-router-dom';\nimport sound from \"../assets/spin.mp3\"\nconst wins = [\n  \"Early 5\",\n  \"Top Line\",\n  \"Middle Line\",\n  \"Bottom Line\",\n  \"Four Corners\",\n  \"Full House 1\",\n  \" Full House 2\"\n]\nfunction App() {\n  const [list, setList] = useState([]);\n  const [isWating, setIsWating] = useState(false);\n  const [spinner, setSpiner] = useState(1);\n  const [audio, setAudio]=useState(new Audio(sound));\n  const history = useHistory();\n\n  useEffect(() => {\n    if (list.length) localStorage.setItem(\"numbers\", JSON.stringify(list))\n  }, [list])\n\n  useEffect(() => {\n    let stoaredList = JSON.parse(localStorage.getItem(\"numbers\"))\n    if (stoaredList) setList(stoaredList)\n  }, [])\n\n  const handleOnReset = () => {\n    setList([])\n    localStorage.removeItem(\"numbers\")\n  }\n\n  const handleOnClick = () => {\n    if (list.length < 90) {\n      let intervalId = setInterval(() => {\n        let number = Math.floor(Math.random() * (91 - 1) + 1)\n        setSpiner(number)\n      }, 50)\n      let flag = true;\n      while (flag) {\n        let number = Math.floor(Math.random() * (91 - 1) + 1)\n        if (!list.includes(number)) {\n          setIsWating(true)\n          audio.play()\n          flag = false\n          setTimeout(() => {\n            clearInterval(intervalId)\n            setList([...list, number])\n            setIsWating(false)\n            audio.remove()\n          }, 3600)\n        }\n      }\n    }\n  }\n\n  const Board = () => {\n    let tempList = []\n    let row = []\n    for (let i = 1; i <= 90; i++) {\n\n      row.push(<div\n        className={`col  ${list.includes(i) ? \"border-danger\" : \"\"} rounded-pill mx-2 my-2`}\n        style={{ backgroundColor: list.includes(i) ? \"#d5e4f3\" : \"\" }}>\n        <span style={{ fontSize: \"25px\", color: !list.includes(i) ? \"#6c757d\" : \"\", fontWeight: !list.includes(i) ? \"100\" : \"bold\" }}><b>{i}</b></span>\n      </div>)\n\n      if (i % 10 === 0) {\n        tempList.push(<div className=\"row\" style={{ margin: \"0px\", width: \"90px\", borderLeft: \"1px solid #fff\", borderRight: \"1px solid\" }}>{row}</div>)\n        row = []\n      }\n    }\n    return tempList;\n  }\n\n  return (\n    <div className=\"row\" style={{ height: \"100vh\", border: \"2px solid\" }}>\n      <div className=\"col-3 d-flex align-items-center flex-column pt-3\" style={{ backgroundColor: \"#adb5bd\" }}>\n        <div className=\"d-flex justify-content-center\">\n          <Button variant=\"info\" onClick={handleOnReset} size=\"sm\">\n            Reset\n          </Button>\n          <Button className=\"ml-3\" variant=\"secondary\" onClick={() => history.push(\"/tambola/tickets\")} size=\"sm\">\n            generate tickets\n          </Button>\n        </div>\n        <div style={{ fontSize: \"20px\" }} className=\"pt-2\">Previous</div>\n        <div style={{ width: \"100px\", height: \"100px\" }} className=\"d-flex align-items-center justify-content-center border border-secondary rounded-circle mb-1\" >\n          {list.length !== 0 &&\n            <span style={{ fontSize: \"60px\", color: \"grey\" }}>\n              {list[list.length - 2]}\n            </span>\n          }\n        </div>\n        <div style={{ width: \"200px\", height: \"200px\",background:\"#d5e4f3\" }} className=\"d-flex align-items-center justify-content-center border border-dark rounded-circle\" >\n          {isWating ?\n            <span style={{ fontSize: \"135px\", color: \"grey\" }}>\n              {spinner}\n            </span> :\n            list.length ?\n              <span style={{ fontSize: list.length != 0 ? \"135px\" : \"50px\", fontWeight: \"bold\"}}>\n                {list[list.length - 1]}\n              </span> :\n              <h2>Start With Spin &#x21e9;</h2>\n          }\n        </div>\n        <Button className=\"mt-3\" onClick={handleOnClick} disabled={isWating}>\n          {isWating ?\n            <Spinner animation=\"border\" variant=\"info\" /> :\n            <>Spin &#x27F3;</>\n          }\n        </Button>\n        <div class=\"d-flex flex-wrap mt-2 mx-4\">\n          {wins.map(label => <FormCheck style={{ width: \"120px\", textAlign: \"left\" }} className=\"p-2\" label={label} />)}\n        </div>\n      </div>\n      <div className=\"col pt-2\" style={{ height: \"100%\", backgroundColor: \"#adb5bd\", borderLeft: \"1px solid\" }}>\n        <div>\n          <h1><b>Better Luck Next Time...!</b></h1>\n          <div class=\"d-flex mx-5 mb-5 bg-dark w-75\" style={{ borderColor: \"#adb5bd\",border:\"5px solid #d5e4f3\" }}>\n            <Board />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(App);\n","import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"@firebase/firestore\";\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAWBao_ZI8vLJIloZ4RN-iiwpCpQyjYznM\",\n    authDomain: \"ticket-afeb3.firebaseapp.com\",\n    projectId: \"ticket-afeb3\",\n    storageBucket: \"ticket-afeb3.appspot.com\",\n    messagingSenderId: \"12088333664\",\n    appId: \"1:12088333664:web:5c99748047e3c7e964fa05\",\n    measurementId: \"G-TKVGNV2VSX\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport const fireStore = getFirestore(app)","import React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport tamblo from \"tambola-generator\"\nimport { useHistory } from 'react-router-dom';\nimport { collection, updateDoc, doc } from \"firebase/firestore\"\nimport { fireStore } from \"../firebase\";\n\nconst constSets = [1, 2, 3, 4, 5, 6];\nconst colors = [\"red\", \"green\", \"blue\", \"purple\", \"orange\", \"yellow\"]\n\nfunction Ticket() {\n    const [list, setList] = useState([]);\n    const [player, setPlayers] = useState(0);\n    const [sets, setSets] = useState(1);\n    const [password, setPassword] = useState(\"\")\n    const [openField, setOpenField] = useState(false)\n\n\n    const history = useHistory()\n\n    const updateTickets = async () => {\n        if (password === \"admin123\") {\n            const ticketDoc = doc(fireStore, \"tickets\", \"tickets\")\n            let data = {\n                list: JSON.stringify(list),\n                players: parseInt(player),\n                sets: sets\n            }\n            await updateDoc(ticketDoc, data)\n            alert(\"tickets uploaded successfully\")\n            setOpenField(false)\n        } else {\n            alert(\"password mismatch\")\n        }\n    }\n    const handelSubmit = () => {\n        let tickets = tamblo.generateTickets(parseInt(player * sets))\n        setList(tickets)\n    }\n\n    const Card = () => {\n        const func = (card, index) => {\n            let myID = Math.floor(index / sets) + 1\n            let color = colors[index % sets]\n            return <><div className=\"mb-4\">\n                <div id={`${myID}_${color}`} style={{ marginLeft: \"20px\", padding: \"30px\", background: \"#fff\" }} className=\"border border-success\" >\n                    <span>{color}</span>\n                    {card._entries.map(row =>\n                        <div class=\"row \">\n                            {row.map(col => <div class=\"col border border-dark\" style={{ width: \"40px\", height: \"40px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", fontSize: \"20px\", background: col ? \"#fff\" : color }}>{col || \" \"}</div>)}\n                        </div>)\n                    }\n                    <span> ticket : {`${myID}_${color}`}</span>\n                </div>\n            </div>\n            </>\n        }\n        return func;\n    }\n\n    const tempCard = Card();\n\n    return (\n        <>\n            {!list.length ?\n                <div className=\"row\" style={{ height: \"100vh\", background: \"#cccbab\", width: \"100%\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <div>\n                        <Button onClick={() => history.push(\"/tambola\")} size=\"sm\" variant=\"success\" className=\"mb-2\">Home</Button>\n                        <div>\n                            <input style={{ padding: \"10px\" }} placeholder=\"enter number of players\" onChange={(e) => setPlayers(e.target.value)} type=\"number\" />\n                        </div>\n                        <div className=\"mt-2\">\n                            <label className=\"mr-3\">select number of sets : </label>\n                            <select onChange={(e) => setSets(parseInt(e.target.value))} className=\"px-2 py-1\">\n                                {constSets.map(set => <option value={set} >{set}</option>)}\n                            </select>\n                        </div>\n                        <div className=\"mt-5\">\n                            <Button onClick={handelSubmit} variant=\"success\">Generate Tickets</Button>\n                        </div>\n                    </div>\n                </div> :\n                <div style={{ background: \"#cccbab\" }} className=\"mb-5\">\n                    <Button onClick={() => history.push(\"/tambola\")} size=\"sm\" variant=\"success\" className=\"mb-2\">Home</Button>\n                    <Button onClick={() => setOpenField(v => !v)} size=\"sm\" variant=\"warning\" className=\"ml-2 mb-2\">Upload Ticket</Button>\n                    {openField && <div>\n                        <input type=\"text\" value={password} onChange={(e) => setPassword(e.target.value)} />\n                        <Button onClick={updateTickets} size=\"sm\" variant=\"primary\" className=\"ml-2 mb-2\">Submit</Button>\n                    </div>}\n                    <div className=\"row\" >\n                        {list.map((ticket, index) => tempCard(ticket, index))}\n                    </div>\n                </div>\n            }\n        </>\n    );\n}\n\nexport default React.memo(Ticket);\n\n","import React, { useEffect, useState } from \"react\";\nimport { collection, getDocs } from \"firebase/firestore\"\nimport { fireStore } from \"../firebase\";\nimport { useParams } from 'react-router-dom';\nconst colors = [\"red\", \"green\", \"blue\", \"purple\", \"orange\", \"yellow\"]\nlet rows = [\"top\", \"middle\", \"bottom\"]\nconst init = { all: 0, top: 0, bottom: 0, middle: 0, corner: 0 }\n\nfunction PlayCard() {\n    const [list, setList] = useState([]);\n    const { id } = useParams();\n    const [sets, setSets] = useState(1);\n    const [players, setPlayers] = useState(0);\n    const [selectedCard, setSelectedCard] = useState([])\n    const [corners, setCorners] = useState([])\n    const ticketCollectionRef = collection(fireStore, \"tickets\")\n\n    const [myCard, setMyCard] = useState([...Array(3)].map(e => Array(9).fill(null)))\n    const [myCount, setMyCount] = useState([])\n\n    useEffect(() => {\n        const getTickets = async () => {\n            let data = await getDocs(ticketCollectionRef)\n            data = data.docs[0].data()\n            setList(JSON.parse(data.list))\n            setSets(data.sets)\n            setPlayers(data.players)\n        }\n        getTickets()\n    }, [])\n\n    const setconerValues = (ar) => {\n        let arr = []\n        ar.map(card => {\n            let temp1 = []\n            card._entries[0].map(col => {\n                if (col != 0) temp1.push(col)\n            })\n            let temp2 = []\n            card._entries[2].map(col => {\n                if (col != 0) temp2.push(col)\n            })\n            let temp = [temp1[0], temp1[4], temp2[0], temp2[4]]\n            arr.push(temp)\n        })\n        setCorners(arr)\n    }\n\n    useEffect(() => {\n        if (list.length > 0 && sets && parseInt(id) <= players && parseInt(id) > 0) {\n            setMyCount([...Array(sets)].map(e => ({ ...init })))\n            setMyCard([...Array(sets)].map(e => [...Array(3)].map(e => Array(9).fill(null))))\n            let ar = []\n            let start = (parseInt(id) - 1) * sets;\n            for (let i = start; i < parseInt(id) * sets; i++) {\n                ar.push(list[i])\n            }\n            setconerValues(ar)\n            setSelectedCard(ar)\n        }\n\n    }, [list, sets, players])\n\n    const onClick = (cardIndex, rowindex, colindex, col) => {\n        if (col != 0) {\n            let arr = [...myCard]\n            let count = { ...myCount }\n            if (arr[cardIndex][rowindex][colindex] === null) {\n                arr[cardIndex][rowindex][colindex] = col\n                count[cardIndex].all = myCount[cardIndex].all + 1\n                count[cardIndex][rows[rowindex]] = myCount[cardIndex][rows[rowindex]] + 1\n\n\n                if (corners[cardIndex].includes(col)) {\n                    count[cardIndex].corner = myCount[cardIndex].corner + 1\n                }\n\n            } else {\n                arr[cardIndex][rowindex][colindex] = null\n                count[cardIndex].all = myCount[cardIndex].all - 1\n                count[cardIndex][rows[rowindex]] = myCount[cardIndex][rows[rowindex]] - 1\n\n                if (corners[cardIndex].includes(col)) {\n                    count[cardIndex].corner = myCount[cardIndex].corner - 1\n                }\n            }\n            setMyCard(arr)\n            setMyCount(count)\n        }\n    }\n\n    return (\n        <>\n            {parseInt(id) && selectedCard.map((card, cardindex) => <div style={{ margin: \"20px\", padding: \"30px\", background: \"#fff\", border: \"1px solid\", width: \"100%\", display: \"flex\" }}>\n                <div style={{ width: \"70%\" }}>\n                    {card._entries.map((row, rowindex) =>\n                        <div style={{ display: \"flex\", flexWrap: \"wrap\", margin: \"0px 10px\" }}>\n                            {row.map((col, colindex) => <button\n                                style={{\n                                    lexBasis: 0,\n                                    flexGrow: 1,\n                                    // maxWidth: \"100%\",\n                                    width: \"40px\",\n                                    border: \"1px solid\",\n                                    height: \"70px\",\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    alignItems: \"center\",\n                                    fontSize: \"20px\",\n                                    background: col ? (myCard[cardindex][rowindex][colindex] ? \"#6c757d\" : \"#fff\") : colors[cardindex],\n                                    cursor: col ? \"pointer\" : \"unset\",\n                                    textDecoration: myCard[cardindex][rowindex][colindex] ? \"line-through\" : \"none\"\n                                }}\n                                onClick={(e) => onClick(cardindex, rowindex, colindex, col)}>\n                                {col || \" \"}</button>)}\n                        </div>)\n                    }\n                </div>\n                <div style={{ textAlign: \"left\", marginLeft: \"10px\", fontSize: \"20px\", fontWeight: \"600\" }}>\n                    <div style={{ padding: \"3px\" }}>\n                        Early 5: {myCount[cardindex].all >= 5 ? <>&#x2705;</> : <>&#10060;</>}\n                    </div>\n                    <div style={{ padding: \"3px\" }}>\n                        Top Line: {myCount[cardindex].top == 5 ? <>&#x2705;</> : <>&#10060;</>}\n                    </div>\n                    <div style={{ padding: \"3px\" }}>\n                        Middle Line: {myCount[cardindex].middle == 5 ? <>&#x2705;</> : <>&#10060;</>}\n                    </div>\n                    <div style={{ padding: \"3px\" }}>\n                        Bottom Line: {myCount[cardindex].bottom == 5 ? <>&#x2705;</> : <>&#10060;</>}\n                    </div>\n                    <div style={{ padding: \"3px\" }}>\n                        Four Corners: {myCount[cardindex].corner == 4 ? <>&#x2705;</> : <>&#10060;</>}\n                    </div>\n                    <div style={{ padding: \"3px\" }}>\n                        Full House 1: {myCount[cardindex].all == 15 ? <>&#x2705;</> : <>&#10060;</>}\n                    </div>\n                </div>\n            </div>)}\n            {players != 0 && (parseInt(id) > players || id <= 0 )  && <h1>Card Not Found</h1>}\n        </>\n    );\n}\n\nexport default React.memo(PlayCard);\n","import './App.css';\nimport React from \"react\";\nimport Main from \"./components/main\";\nimport Ticket from \"./components/ticket\";\nimport PlayCard from './components/PlayCard';\nimport { Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{ overflow: \"hidden\" }}>\n      <Switch>\n        <Route path='/tambola/tickets' component={Ticket} />\n        <Route path='/tambola/tickets/:id' component={PlayCard} />\n        <Route path='/' component={Main} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default React.memo(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter} from 'react-router-dom';\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}