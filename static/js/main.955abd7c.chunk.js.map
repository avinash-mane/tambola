{"version":3,"sources":["assets/spin.mp3","components/main.js","firebase.js","components/ticket.js","assets/clap.mp3","assets/clapman.gif","components/PlayCard.js","App.js","reportWebVitals.js","index.js"],"names":["wins","App","useState","list","setList","isWating","setIsWating","spinner","setSpiner","Audio","sound","history","useHistory","useEffect","length","localStorage","setItem","JSON","stringify","stoaredList","parse","getItem","Board","tempList","row","i","push","className","includes","style","backgroundColor","fontSize","color","fontWeight","margin","width","borderLeft","borderRight","height","border","Button","variant","onClick","removeItem","size","background","intervalId","setInterval","number","Math","floor","random","flag","setTimeout","clearInterval","disabled","Spinner","animation","class","map","label","FormCheck","textAlign","borderColor","React","memo","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","fireStore","getFirestore","constSets","colors","Ticket","player","setPlayers","sets","setSets","password","setPassword","openField","setOpenField","updateTickets","a","ticketDoc","doc","data","players","parseInt","updateDoc","alert","tempCard","card","index","myID","id","marginLeft","padding","_entries","col","display","justifyContent","alignItems","v","type","value","onChange","e","target","ticket","placeholder","set","tickets","tamblo","generateTickets","rows","init","all","top","bottom","middle","corner","PlayCard","setId","ticketId","useParams","tempId","claps","audio","selectedCard","setSelectedCard","corners","setCorners","ticketCollectionRef","collection","showGIF","setShowGIF","Array","fill","myCard","setMyCard","myCount","setMyCount","getDocs","docs","getTickets","ar","arr","temp1","temp2","temp","setconerValues","cardindex","rowindex","colindex","cursor","textDecoration","textDecorationThickness","cardIndex","count","play","src","img","overflow","path","component","Main","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.955abd7c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/spin.16183bed.mp3\";","import React, { useEffect, useState } from \"react\";\nimport { Button, Spinner, FormCheck } from \"react-bootstrap\";\nimport { useHistory } from 'react-router-dom';\nimport sound from \"../assets/spin.mp3\"\nconst wins = [\n  \"Early 5\",\n  \"Top Line\",\n  \"Middle Line\",\n  \"Bottom Line\",\n  \"Four Corners\",\n  \"Full House 1\",\n  \" Full House 2\"\n]\nfunction App() {\n  const [list, setList] = useState([]);\n  const [isWating, setIsWating] = useState(false);\n  const [spinner, setSpiner] = useState(1);\n  const [audio, setAudio]=useState(new Audio(sound));\n  const history = useHistory();\n\n  useEffect(() => {\n    if (list.length) localStorage.setItem(\"numbers\", JSON.stringify(list))\n  }, [list])\n\n  useEffect(() => {\n    let stoaredList = JSON.parse(localStorage.getItem(\"numbers\"))\n    if (stoaredList) setList(stoaredList)\n  }, [])\n\n  const handleOnReset = () => {\n    setList([])\n    localStorage.removeItem(\"numbers\")\n  }\n\n  const handleOnClick = () => {\n    if (list.length < 90) {\n      let intervalId = setInterval(() => {\n        let number = Math.floor(Math.random() * (91 - 1) + 1)\n        setSpiner(number)\n      }, 50)\n      let flag = true;\n      while (flag) {\n        let number = Math.floor(Math.random() * (91 - 1) + 1)\n        if (!list.includes(number)) {\n          setIsWating(true)\n          // audio.play()\n          flag = false\n          setTimeout(() => {\n            clearInterval(intervalId)\n            setList([...list, number])\n            setIsWating(false)\n            // audio.remove()\n          }, 2000)\n        }\n      }\n    }\n  }\n\n  const Board = () => {\n    let tempList = []\n    let row = []\n    for (let i = 1; i <= 90; i++) {\n\n      row.push(<div\n        className={`col  ${list.includes(i) ? \"border-danger\" : \"\"} rounded-pill mx-2 my-2`}\n        style={{ backgroundColor: list.includes(i) ? \"#d5e4f3\" : \"\" }}>\n        <span style={{ fontSize: \"25px\", color: !list.includes(i) ? \"#6c757d\" : \"\", fontWeight: !list.includes(i) ? \"100\" : \"bold\" }}><b>{i}</b></span>\n      </div>)\n\n      if (i % 10 === 0) {\n        tempList.push(<div className=\"row\" style={{ margin: \"0px\", width: \"auto\", borderLeft: \"1px solid #fff\", borderRight: \"1px solid\" }}>{row}</div>)\n        row = []\n      }\n    }\n    return tempList;\n  }\n\n  return (\n    <div className=\"row\" style={{ height: \"100vh\", border: \"2px solid\" }}>\n      <div className=\"col-3 d-flex align-items-center flex-column pt-3\" style={{ backgroundColor: \"#adb5bd\" }}>\n        <div className=\"d-flex justify-content-center\">\n          <Button variant=\"info\" onClick={handleOnReset} size=\"sm\">\n            Reset\n          </Button>\n          <Button className=\"ml-3\" variant=\"secondary\" onClick={() => history.push(\"/tambola/tickets\")} size=\"sm\">\n            generate tickets\n          </Button>\n          <Button className=\"ml-3\" variant=\"warning\" onClick={() => history.push(\"/tambola/card\")} size=\"sm\">\n            Play Card\n          </Button>\n        </div>\n        <div style={{ fontSize: \"20px\" }} className=\"pt-2\">Previous</div>\n        <div style={{ width: \"100px\", height: \"100px\" }} className=\"d-flex align-items-center justify-content-center border border-secondary rounded-circle mb-1\" >\n          {list.length !== 0 &&\n            <span style={{ fontSize: \"60px\", color: \"grey\" }}>\n              {list[list.length - 2]}\n            </span>\n          }\n        </div>\n        <div style={{ width: \"200px\", height: \"200px\",background:\"#d5e4f3\" }} className=\"d-flex align-items-center justify-content-center border border-dark rounded-circle\" >\n          {isWating ?\n            <span style={{ fontSize: \"135px\", color: \"grey\" }}>\n              {spinner}\n            </span> :\n            list.length ?\n              <span style={{ fontSize: list.length != 0 ? \"135px\" : \"50px\", fontWeight: \"bold\"}}>\n                {list[list.length - 1]}\n              </span> :\n              <h2>Start With Spin &#x21e9;</h2>\n          }\n        </div>\n        <Button className=\"mt-3\" onClick={handleOnClick} disabled={isWating}>\n          {isWating ?\n            <Spinner animation=\"border\" variant=\"info\" /> :\n            <>Spin &#x27F3;</>\n          }\n        </Button>\n        <div class=\"d-flex flex-wrap mt-2 mx-4\">\n          {wins.map(label => <FormCheck style={{ width: \"120px\", textAlign: \"left\" }} className=\"p-2\" label={label} />)}\n        </div>\n      </div>\n      <div className=\"col-9 pt-2\" style={{ height: \"100%\", backgroundColor: \"#adb5bd\", borderLeft: \"1px solid\" }}>\n        <div>\n          <h1><b>Better Luck Next Time...!</b></h1>\n          <div class=\"d-flex mx-5 mb-5 bg-dark\" style={{ borderColor: \"#adb5bd\",border:\"5px solid #d5e4f3\" }}>\n            <Board />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(App);\n","import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"@firebase/firestore\";\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAWBao_ZI8vLJIloZ4RN-iiwpCpQyjYznM\",\n    authDomain: \"ticket-afeb3.firebaseapp.com\",\n    projectId: \"ticket-afeb3\",\n    storageBucket: \"ticket-afeb3.appspot.com\",\n    messagingSenderId: \"12088333664\",\n    appId: \"1:12088333664:web:5c99748047e3c7e964fa05\",\n    measurementId: \"G-TKVGNV2VSX\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport const fireStore = getFirestore(app)","import React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport tamblo from \"tambola-generator\"\nimport { useHistory } from 'react-router-dom';\nimport { collection, updateDoc, doc } from \"firebase/firestore\"\nimport { fireStore } from \"../firebase\";\n\nconst constSets = [1, 2, 3, 4, 5, 6];\nconst colors = [\"red\", \"green\", \"blue\", \"purple\", \"orange\", \"yellow\"]\n\nfunction Ticket() {\n    const [list, setList] = useState([]);\n    const [player, setPlayers] = useState(0);\n    const [sets, setSets] = useState(1);\n    const [password, setPassword] = useState(\"\")\n    const [openField, setOpenField] = useState(false)\n\n\n    const history = useHistory()\n\n    const updateTickets = async () => {\n        if (password === \"admin123\") {\n            const ticketDoc = doc(fireStore, \"tickets\", \"tickets\")\n            let data = {\n                list: JSON.stringify(list),\n                players: parseInt(player),\n                sets: sets\n            }\n            await updateDoc(ticketDoc, data)\n            alert(\"tickets uploaded successfully\")\n            setOpenField(false)\n        } else {\n            alert(\"password mismatch\")\n        }\n    }\n    const handelSubmit = () => {\n        let tickets = tamblo.generateTickets(parseInt(player * sets))\n        setList(tickets)\n    }\n\n    const Card = () => {\n        const func = (card, index) => {\n            let myID = Math.floor(index / sets) + 1\n            let color = colors[index % sets]\n            return <><div className=\"mb-4\">\n                <div id={`${myID}_${color}`} style={{ marginLeft: \"20px\", padding: \"30px\", background: \"#fff\" }} className=\"border border-success\" >\n                    <span>{color}</span>\n                    {card._entries.map(row =>\n                        <div class=\"row \">\n                            {row.map(col => <div class=\"col border border-dark\" style={{ width: \"40px\", height: \"40px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", fontSize: \"20px\", background: col ? \"#fff\" : color }}>{col || \" \"}</div>)}\n                        </div>)\n                    }\n                    <span> ticket : {`${myID}_${color}`}</span>\n                </div>\n            </div>\n            </>\n        }\n        return func;\n    }\n\n    const tempCard = Card();\n\n    return (\n        <>\n            {!list.length ?\n                <div className=\"row\" style={{ height: \"100vh\", background: \"#cccbab\", width: \"100%\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <div>\n                        <Button onClick={() => history.push(\"/tambola\")} size=\"sm\" variant=\"success\" className=\"mb-2\">Home</Button>\n                        <div>\n                            <input style={{ padding: \"10px\" }} placeholder=\"enter number of players\" onChange={(e) => setPlayers(e.target.value)} type=\"number\" />\n                        </div>\n                        <div className=\"mt-2\">\n                            <label className=\"mr-3\">select number of sets : </label>\n                            <select onChange={(e) => setSets(parseInt(e.target.value))} className=\"px-2 py-1\">\n                                {constSets.map(set => <option value={set} >{set}</option>)}\n                            </select>\n                        </div>\n                        <div className=\"mt-5\">\n                            <Button onClick={handelSubmit} variant=\"success\">Generate Tickets</Button>\n                        </div>\n                    </div>\n                </div> :\n                <div style={{ background: \"#cccbab\" }} className=\"mb-5\">\n                    <Button onClick={() => history.push(\"/tambola\")} size=\"sm\" variant=\"success\" className=\"mb-2\">Home</Button>\n                    <Button onClick={() => setOpenField(v => !v)} size=\"sm\" variant=\"warning\" className=\"ml-2 mb-2\">Upload Ticket</Button>\n                    {openField && <div>\n                        <input type=\"text\" value={password} onChange={(e) => setPassword(e.target.value)} />\n                        <Button onClick={updateTickets} size=\"sm\" variant=\"primary\" className=\"ml-2 mb-2\">Submit</Button>\n                    </div>}\n                    <div className=\"row\" >\n                        {list.map((ticket, index) => tempCard(ticket, index))}\n                    </div>\n                </div>\n            }\n        </>\n    );\n}\n\nexport default React.memo(Ticket);\n\n","export default __webpack_public_path__ + \"static/media/clap.ba7b35d2.mp3\";","export default __webpack_public_path__ + \"static/media/clapman.d389f1c3.gif\";","import React, { useEffect, useState } from \"react\";\nimport { collection, getDocs } from \"firebase/firestore\"\nimport { fireStore } from \"../firebase\";\nimport { Button } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\"\nimport claps from \"../assets/clap.mp3\"\nimport img from \"../assets/clapman.gif\"\nconst colors = [\"red\", \"green\", \"blue\", \"purple\", \"orange\", \"yellow\"]\nlet rows = [\"top\", \"middle\", \"bottom\"]\nconst init = { all: 0, top: 0, bottom: 0, middle: 0, corner: 0 }\n\nfunction PlayCard() {\n    const [list, setList] = useState([]);\n    const [sets, setSets] = useState(1);\n    const [id, setId] = useState(\"\")\n    const { ticketId } = useParams()\n    let tempId = \"\"\n    const [audio, setAudio] = useState(new Audio(claps));\n    const [players, setPlayers] = useState(0);\n    const [selectedCard, setSelectedCard] = useState([])\n    const [corners, setCorners] = useState([])\n    const ticketCollectionRef = collection(fireStore, \"tickets\")\n    const [showGIF, setShowGIF] = useState(null)\n\n    const [myCard, setMyCard] = useState([...Array(3)].map(e => Array(9).fill(null)))\n    const [myCount, setMyCount] = useState([])\n\n    useEffect(() => {\n        const getTickets = async () => {\n            let data = await getDocs(ticketCollectionRef)\n            data = data.docs[0].data()\n            setList(JSON.parse(data.list))\n            setSets(data.sets)\n            setPlayers(data.players)\n        }\n        getTickets()\n    }, [])\n\n    useEffect(() => {\n        if (ticketId) {\n            setId(parseInt(ticketId))\n        }\n    }, [ticketId])\n\n    useEffect(() => {\n        if (showGIF) {\n            setTimeout(() => {\n                setShowGIF(null)\n            }, 3500)\n        }\n    }, [showGIF])\n\n    const setconerValues = (ar) => {\n        let arr = []\n        ar.map(card => {\n            let temp1 = []\n            card._entries[0].map(col => {\n                if (col != 0) temp1.push(col)\n            })\n            let temp2 = []\n            card._entries[2].map(col => {\n                if (col != 0) temp2.push(col)\n            })\n            let temp = [temp1[0], temp1[4], temp2[0], temp2[4]]\n            arr.push(temp)\n        })\n        setCorners(arr)\n    }\n\n    useEffect(() => {\n        if (list.length > 0 && sets && parseInt(id) <= players && parseInt(id) > 0) {\n            setMyCount([...Array(sets)].map(e => ({ ...init })))\n            setMyCard([...Array(sets)].map(e => [...Array(3)].map(e => Array(9).fill(null))))\n            let ar = []\n            let start = (parseInt(id) - 1) * sets;\n            for (let i = start; i < parseInt(id) * sets; i++) {\n                ar.push(list[i])\n            }\n            setconerValues(ar)\n            setSelectedCard(ar)\n        }\n\n    }, [id, list, players, sets])\n\n    const onClick = (cardIndex, rowindex, colindex, col) => {\n        if (col != 0) {\n            let arr = [...myCard]\n            let count = { ...myCount }\n            if (arr[cardIndex][rowindex][colindex] === null) {\n                arr[cardIndex][rowindex][colindex] = col\n                count[cardIndex].all = myCount[cardIndex].all + 1\n                count[cardIndex][rows[rowindex]] = myCount[cardIndex][rows[rowindex]] + 1\n\n\n                if (corners[cardIndex].includes(col)) {\n                    count[cardIndex].corner = myCount[cardIndex].corner + 1\n                }\n\n            } else {\n                arr[cardIndex][rowindex][colindex] = null\n                count[cardIndex].all = myCount[cardIndex].all - 1\n                count[cardIndex][rows[rowindex]] = myCount[cardIndex][rows[rowindex]] - 1\n\n                if (corners[cardIndex].includes(col)) {\n                    count[cardIndex].corner = myCount[cardIndex].corner - 1\n                }\n            }\n            setMyCard(arr)\n            setMyCount(count)\n            if (count[cardIndex].all == 15) {\n                setShowGIF(cardIndex + 1)\n                audio.play()\n            }\n        }\n    }\n\n    return (\n        <>\n            {id === \"\" && <div>\n                <input placeholder=\"insert you ticket id\" className='m-5 p-3' onChange={(e) => tempId = e.target.value} />\n                <Button onClick={() => setId(tempId)} className='m-5' variant=\"success\">Submit</Button>\n            </div>\n            }\n            {selectedCard.map((card, cardindex) => <div style={{ margin: \"20px\", padding: \"20px\", background: \"#fff\", border: \"1px solid\" }} className=\"d-sm-flex\">\n                <div className=\"w-sm-100 col-sm-9 p-0\">\n                    {card._entries.map((row, rowindex) =>\n                        <div style={{ display: \"flex\", height: \"30%\" }}>\n                            {row.map((col, colindex) => <button\n                                style={{\n                                    // lexBasis: 0,\n                                    // flexGrow: 1,\n                                    // maxWidth: \"100%\",\n                                    width: \"15%\",\n                                    border: \"1px solid\",\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    alignItems: \"center\",\n                                    fontSize: \"20px\",\n                                    padding: \"2%\",\n                                    background: col ? (myCard[cardindex][rowindex][colindex] ? \"#6c757d\" : \"#fff\") : colors[cardindex],\n                                    cursor: col ? \"pointer\" : \"unset\",\n                                    textDecoration: myCard[cardindex][rowindex][colindex] ? \"line-through\" : \"none\",\n                                    textDecorationThickness: myCard[cardindex][rowindex][colindex] ? \"1px\" : \"none\"\n                                }}\n                                onClick={(e) => onClick(cardindex, rowindex, colindex, col)}>\n                                {col || \" \"}</button>)}\n                        </div>)\n                    }\n                </div>\n                {myCount[cardindex].all == 15 ?\n                    showGIF == cardindex + 1 && <img src={img} height=\"180px\" className=\"p-2\"></img> :\n                    <div style={{ textAlign: \"left\", marginLeft: \"10px\", fontSize: \"14px\", fontWeight: \"600\" }}>\n                        <div style={{ padding: \"3px\" }}>\n                            Early 5: {myCount[cardindex].all >= 5 ? <>&#x2705;</> : <>&#10060;</>}\n                        </div>\n                        <div style={{ padding: \"3px\" }}>\n                            Top Line: {myCount[cardindex].top == 5 ? <>&#x2705;</> : <>&#10060;</>}\n                        </div>\n                        <div style={{ padding: \"3px\" }}>\n                            Middle Line: {myCount[cardindex].middle == 5 ? <>&#x2705;</> : <>&#10060;</>}\n                        </div>\n                        <div style={{ padding: \"3px\" }}>\n                            Bottom Line: {myCount[cardindex].bottom == 5 ? <>&#x2705;</> : <>&#10060;</>}\n                        </div>\n                        <div style={{ padding: \"3px\" }}>\n                            Four Corners: {myCount[cardindex].corner == 4 ? <>&#x2705;</> : <>&#10060;</>}\n                        </div>\n                        <div style={{ padding: \"3px\" }}>\n                            Full House 1: {myCount[cardindex].all == 15 ? <>&#x2705;</> : <>&#10060;</>}\n                        </div>\n                    </div>}\n            </div>)}\n            {id !== \"\" && players != 0 && (parseInt(id) > players || id <= 0) && <h1>Card Not Found</h1>}\n        </>\n    );\n}\n\nexport default React.memo(PlayCard);\n","import './App.css';\nimport React from \"react\";\nimport Main from \"./components/main\";\nimport Ticket from \"./components/ticket\";\nimport PlayCard from './components/PlayCard';\nimport { Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{ overflow: \"hidden\" }}>\n      <Switch>\n        <Route path='/tickets' component={Ticket} />\n        <Route path='/card/:ticketId' component={PlayCard} />\n        <Route path='/card' component={PlayCard} />\n        <Route path='/' component={Main} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default React.memo(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter} from 'react-router-dom';\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}